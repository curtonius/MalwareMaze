using System.Collections;
using UnityEngine;

//The Blit code for the Post processing effect
public class Blit : MonoBehaviour
{
    //Get a static reference for the Blit
    public static Blit Instance;

    //Set up the Material/Shader for the effects
    private Material mat;
    public Shader s;

    //get the colors for the screen
    public Color outline;
    public Color mainColor;
    public Color damageColor;

    //The flash value for the player damage
    public int damaged;

    //Thickness out object outlines
    public float lineThickness;

    //The speed in which the scan lines cross the screen
    public float scanSpeed;

    //The strength of distortion of the crt effect
    public Vector2 distortionStrength;

    private void Start()
    {
        Instance = this;
        mat = new Material(s);
    }


    //Render the screen image with post processing effects
    private void OnRenderImage(RenderTexture source, RenderTexture destination)
    {
        //Set variables for the effects
        lineThickness = Mathf.Floor(lineThickness + 0.5f);
        mat.SetFloat("_LineThickness", lineThickness);
        mat.SetFloat("_ScanSpeed", scanSpeed);

        mat.SetFloat("_DistortionX", distortionStrength.x);
        mat.SetFloat("_DistortionY", distortionStrength.y);

        mat.SetVector("_OutlineColor", new Vector4(outline.r, outline.g, outline.b, outline.a));
        mat.SetVector("_DamageColor", new Vector4(damageColor.r, damageColor.g, damageColor.b, damageColor.a));
        mat.SetVector("_MainColor", new Vector4(mainColor.r, mainColor.g, mainColor.b, mainColor.a));

        mat.SetInt("_Damaged", damaged);

        //Blit the graphics
        Graphics.Blit(source, destination, mat);
    }

    //Start the damage flash
    public void DoDamage()
    {
        damaged = 1;
        StartCoroutine(FinishDamage());
    }

    //Flash the damage value
    IEnumerator FinishDamage()
    {
        yield return new WaitForSeconds(0.01f);
        damaged = 0;
        yield return new WaitForSeconds(0.01f);
        damaged = 1;
        yield return new WaitForSeconds(0.01f);
        damaged = 0;
        yield return new WaitForSeconds(0.01f);
        damaged = 1;
        yield return new WaitForSeconds(0.01f);
        damaged = 0;
    }
}
