using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class MainMenuManager : MonoBehaviour {

	//Top and bottom bars of main menu
	public RectTransform topBar;
	public RectTransform bottomBar;

	public Text highscoreText;

	// Use this for initialization
	void Start () 
	{
		//Load Highscore save file
		Highscore.Load();

		highscoreText.text = "Highscore: " + Highscore.highscore.ToString();

		topBar.anchoredPosition = new Vector2(0, -Screen.height / 2 - 5);
		bottomBar.anchoredPosition = new Vector2(0, Screen.height / 2);

		//Unlock mouse
		Cursor.lockState = CursorLockMode.None;
		Cursor.visible = true;

		//Open the bars
		StartCoroutine(OpenBars());
	}

	void OnDestroy()
	{
		//When the main menu is destroyed, save the highscore
		Highscore.Save();
	}

	void OnApplicationQuit()
	{
		//When the game is quit, save the highscore
		Highscore.Save();
	}

	public void StartGame()
	{
		//If a highscore doesn't exist
		if (Highscore.highscore == 0)
		{
			//Load tutorial
			StartCoroutine(TransitionToScene(2));
		}
		else
		{
			//Otherwise lose the Main game
			StartCoroutine(TransitionToScene(1));
		}
	}

	//Open the top/bottom bars
	IEnumerator OpenBars()
	{
		yield return new WaitForSeconds(0.5f);

		Vector2 topBarOriginal = topBar.anchoredPosition;
		Vector2 bottomBarOriginal = bottomBar.anchoredPosition;

		Vector2 topBarNew = topBar.anchoredPosition + new Vector2(0, Screen.height / 2 + 5);
		Vector2 bottomBarNew = bottomBar.anchoredPosition - new Vector2(0, Screen.height / 2);
		float t = 0;

		while (t < 1)
		{
			t += Time.deltaTime;

			topBar.anchoredPosition = Vector2.Lerp(topBarOriginal, topBarNew, t);
			bottomBar.anchoredPosition = Vector2.Lerp(bottomBarOriginal, bottomBarNew, t);

			yield return null;
		}

		yield return null;
	}

	//Transition into the scene
	IEnumerator TransitionToScene(int scene)
	{
		Vector2 topBarOriginal = topBar.anchoredPosition;
		Vector2 bottomBarOriginal = bottomBar.anchoredPosition;

		Vector2 topBarNew = topBar.anchoredPosition - new Vector2(0, Screen.height / 2 + 5);
		Vector2 bottomBarNew = bottomBar.anchoredPosition + new Vector2(0, Screen.height / 2);
		float t = 0;

		while (t < 1)
		{
			t += Time.deltaTime;

			topBar.anchoredPosition = Vector2.Lerp(topBarOriginal, topBarNew, t);
			bottomBar.anchoredPosition = Vector2.Lerp(bottomBarOriginal, bottomBarNew, t);

			yield return null;
		}

		yield return new WaitForSeconds(1);
		SceneManager.LoadScene(scene);

		yield return null;
	}
}
